@model BotSpiel.DataAccess.Models.HandlingUnitsPost

@{
    ViewBag.Title = "Create Handling Units";
}
<br>
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Handling Units</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.sHandlingUnit, "Handling Unit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sHandlingUnit, new { htmlAttributes = new { @class = "form-control", @Value = @Html.Raw(""), @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.sHandlingUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Handling Unit Type ID", "Index", "HandlingUnitTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHandlingUnitType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHandlingUnitType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Parent Handling Unit ID", "Index", "HandlingUnits", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixParentHandlingUnit", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixParentHandlingUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Packing Material ID", "Index", "Materials", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixPackingMaterial", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixPackingMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Material Handling Unit Configuration ID", "Index", "MaterialHandlingUnitConfigurations", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixMaterialHandlingUnitConfiguration", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixMaterialHandlingUnitConfiguration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nLength, "Length", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Length Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixLengthUnit", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixLengthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nWidth, "Width", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nWidth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nWidth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Width Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixWidthUnit", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixWidthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nHeight, "Height", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nHeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Height Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHeightUnit", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHeightUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nWeight, "Weight", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nWeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Weight Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixWeightUnit", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixWeightUnit, "", new { @class = "text-danger" })
            </div>
        </div>
    @*//Custom Code Start | Removed Code Block*@
        @*<div class="form-group">
            @Html.ActionLink("Status ID", "Index", "Statuses", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixStatus", null, "None", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*//Custom Code End*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}

 
