@*//Custom Code Start | Added Code Block*@
@using System.Linq;
@using System.Collections.Generic;
@using BotSpiel.Services;
@using BotSpiel.DataAccess.Models;
@inject IOutboundOrderLinesService _outboundorderlinesService
@*//Custom Code End*@
@model BotSpiel.DataAccess.Models.OutboundOrdersPost

@{
    ViewBag.Title = "Edit Outbound Orders";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Outbound Orders</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ixOutboundOrder)

        <div class="form-group">
            @Html.LabelFor(model => model.sOrderReference, "Order Reference", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sOrderReference, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sOrderReference, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Outbound Order Type ID", "Index", "OutboundOrderTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixOutboundOrderType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixOutboundOrderType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Facility ID", "Index", "Facilities", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixFacility", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixFacility, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Company ID", "Index", "Companies", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixCompany", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixCompany, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Business Partner ID", "Index", "BusinessPartners", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixBusinessPartner", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixBusinessPartner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtDeliverEarliest, "Deliver Earliest", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dtDeliverEarliest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dtDeliverEarliest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtDeliverLatest, "Deliver Latest", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dtDeliverLatest, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dtDeliverLatest, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Carrier Service ID", "Index", "CarrierServices", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixCarrierService", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixCarrierService, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
                @Html.ActionLink("Status ID", "Index", "Statuses", "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ixStatus", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ixStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.ActionLink("Pick Batch ID", "Index", "PickBatches", "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ixPickBatch", null, htmlAttributes: new { @class = "form-control", @readonly = "true" })
                    @Html.ValidationMessageFor(model => model.ixPickBatch, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.ActionLink("Outbound Shipment ID", "Index", "OutboundShipments", "", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ixOutboundShipment", null, htmlAttributes: new { @class = "form-control", @readonly = "true"  })
                    @Html.ValidationMessageFor(model => model.ixOutboundShipment, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*//Custom Code Start | Added Code Block*@
<div>
    @{
        List<BotSpiel.DataAccess.Models.OutboundOrderLines> orderLines = new List<OutboundOrderLines>();
        //Add empty record
        OutboundOrderLines outboundOrderLines = new OutboundOrderLines();
        outboundOrderLines.ixOutboundOrder = Model.ixOutboundOrder;
        outboundOrderLines.OutboundOrders.ixOutboundOrder = Model.ixOutboundOrder;
        orderLines.Add(outboundOrderLines);
        _outboundorderlinesService.IndexDb().Where(x => x.ixOutboundOrder == Model.ixOutboundOrder).ToList().ForEach(x =>
            {
                orderLines.Add(x);
            }
            );
    }
    @await Html.PartialAsync("IndexOutboundOrderLines", orderLines)
</div>
@*//Custom Code End*@

<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}




