
@model BotSpiel.DataAccess.Models.FacilityAisleFacesPost 

@{
    ViewBag.Title = "Edit Facility Aisle Faces";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Facility Aisle Faces</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ixFacilityAisleFace)

        <div class="form-group">
            @Html.LabelFor(model => model.sFacilityAisleFace, "Facility Aisle Face", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sFacilityAisleFace, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sFacilityAisleFace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Facility Floor ID", "Index", "FacilityFloors", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixFacilityFloor", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixFacilityFloor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nSequence, "Sequence", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nSequence, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nSequence, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Bay Sequence Type ID", "Index", "BaySequenceTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixBaySequenceType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixBaySequenceType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Paired Aisle Face ID", "Index", "FacilityAisleFaces", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixPairedAisleFace", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixPairedAisleFace, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Logical Orientation ID", "Index", "LogicalOrientations", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixLogicalOrientation", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixLogicalOrientation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Aisle Face Storage Type ID", "Index", "AisleFaceStorageTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixAisleFaceStorageType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixAisleFaceStorageType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nXOffset, "X Offset", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nXOffset, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nXOffset, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("X Offset Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixXOffsetUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixXOffsetUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nYOffset, "Y Offset", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nYOffset, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nYOffset, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Y Offset Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixYOffsetUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixYOffsetUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nLevels, "Levels", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nLevels, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nLevels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nDefaultNumberOfBays, "Default Number Of Bays", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nDefaultNumberOfBays, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nDefaultNumberOfBays, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nDefaultNumberOfSlotsInBay, "Default Number Of Slots In Bay", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nDefaultNumberOfSlotsInBay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nDefaultNumberOfSlotsInBay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Default Facility Zone ID", "Index", "FacilityZones", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixDefaultFacilityZone", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixDefaultFacilityZone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Default Location Function ID", "Index", "LocationFunctions", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixDefaultLocationFunction", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixDefaultLocationFunction, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Default Inventory Location Size ID", "Index", "InventoryLocationSizes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixDefaultInventoryLocationSize", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixDefaultInventoryLocationSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}


 

