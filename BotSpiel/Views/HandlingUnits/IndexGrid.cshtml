@using System.Linq;
@using System.Collections.Generic;
@using BotSpiel.Services;
@inject IHandlingUnitsService _handlingunitsService
@model IEnumerable<BotSpiel.DataAccess.Models.HandlingUnits>

@{
	List<SelectListItem> queryHandlingUnits = new List<SelectListItem>();
	queryHandlingUnits.AddRange(_handlingunitsService.selectHandlingUnits().ToList().OrderBy(de => de.sHandlingUnit).Select(de => new SelectListItem() { Text = de.sHandlingUnit, Value = de.sHandlingUnit.ToString()}));
	List<SelectListItem> queryHandlingUnitTypes = new List<SelectListItem>();
	queryHandlingUnitTypes.AddRange(_handlingunitsService.selectHandlingUnitTypes().ToList().OrderBy(de => de.sHandlingUnitType).Select(de => new SelectListItem() { Text = de.sHandlingUnitType, Value = de.sHandlingUnitType.ToString()}));
	List<SelectListItem> queryMaterialHandlingUnitConfigurations = new List<SelectListItem>();
	queryMaterialHandlingUnitConfigurations.AddRange(_handlingunitsService.selectMaterialHandlingUnitConfigurations().ToList().OrderBy(de => de.sMaterialHandlingUnitConfiguration).Select(de => new SelectListItem() { Text = de.sMaterialHandlingUnitConfiguration, Value = de.sMaterialHandlingUnitConfiguration.ToString()}));
	List<SelectListItem> queryMaterials = new List<SelectListItem>();
	queryMaterials.AddRange(_handlingunitsService.selectMaterials().ToList().OrderBy(de => de.sMaterial).Select(de => new SelectListItem() { Text = de.sMaterial, Value = de.sMaterial.ToString()}));
	List<SelectListItem> queryStatuses = new List<SelectListItem>();
	queryStatuses.AddRange(_handlingunitsService.selectStatuses().ToList().OrderBy(de => de.sStatus).Select(de => new SelectListItem() { Text = de.sStatus, Value = de.sStatus.ToString()}));
	List<SelectListItem> queryUnitsOfMeasurement = new List<SelectListItem>();
	queryUnitsOfMeasurement.AddRange(_handlingunitsService.selectUnitsOfMeasurement().ToList().OrderBy(de => de.sUnitOfMeasurement).Select(de => new SelectListItem() { Text = de.sUnitOfMeasurement, Value = de.sUnitOfMeasurement.ToString()}));

}


@(Html
        .Grid(Model)
        .Build(columns =>
        {
				columns.Add(model => Html.CheckBox("Check_" + model.ixHandlingUnit, new { @class = "rowCheckBox" })).Titled(Html.CheckBox("CheckAll", new { @onclick = "toggleAll()" }));
				columns.Add(model => model.ixHandlingUnit).Titled("Details").Encoded(false).RenderedAs(item => Html.ActionLink("Details", "Details", new { id = item.ixHandlingUnit }, new { @class = "modal-link" }));
				columns.Add(model => model.ixHandlingUnitEdit).Titled("Edit").Encoded(false).RenderedAs(item => Html.ActionLink("Edit", "Edit", new { id = item.ixHandlingUnit }, new { @class = "modal-link" }));
				columns.Add(model => model.sHandlingUnit).Titled("Handling Unit").Sortable(true).Filterable(true);
				columns.Add(model => model.HandlingUnitTypes.sHandlingUnitType).Titled("Handling Unit Type").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryHandlingUnitTypes);
				columns.Add(model => model.nLength).Titled("Length").Sortable(true).Filterable(true);
				columns.Add(model => model.nWidth).Titled("Width").Sortable(true).Filterable(true);
				columns.Add(model => model.nHeight).Titled("Height").Sortable(true).Filterable(true);
				columns.Add(model => model.nWeight).Titled("Weight").Sortable(true).Filterable(true);
				columns.Add(model => model.dtCreatedAt).Titled("Created At").Sortable(true).Filterable(true);
				columns.Add(model => model.dtChangedAt).Titled("Changed At").Sortable(true).Filterable(true);
				columns.Add(model => model.sCreatedBy).Titled("Created By").Sortable(true).Filterable(true);
				columns.Add(model => model.sChangedBy).Titled("Changed By").Sortable(true).Filterable(true);
        })
        .Empty("No data found")
        .Id("handlingunits-ajax-grid")
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 5, "5" }, { 10, "10" }, { 15, "15" }, { 20, "20" }, { 40, "40" }, { 100, "100" } };
            pager.ShowPageSizes = true;
            pager.RowsPerPage = 20;
        })
        .Css("css-classes")
        .AppendCss("table-hover")
 )


 

