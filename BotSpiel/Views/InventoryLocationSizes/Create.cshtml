
@model BotSpiel.DataAccess.Models.InventoryLocationSizesPost

@{
    ViewBag.Title = "Create Inventory Location Sizes";
}
<br>
<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Inventory Location Sizes</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.sInventoryLocationSize, "Inventory Location Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sInventoryLocationSize, new { htmlAttributes = new { @class = "form-control", @Value = @Html.Raw(""), @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.sInventoryLocationSize, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nLength, "Length", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nLength, new { htmlAttributes = new { @class = "form-control", @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.nLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Length Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixLengthUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixLengthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nWidth, "Width", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nWidth, new { htmlAttributes = new { @class = "form-control", @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.nWidth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Width Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixWidthUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixWidthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nHeight, "Height", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nHeight, new { htmlAttributes = new { @class = "form-control", @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.nHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Height Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHeightUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHeightUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nUsableVolume, "Usable Volume", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nUsableVolume, new { htmlAttributes = new { @class = "form-control", @placeholder = "Required" } })
                @Html.ValidationMessageFor(model => model.nUsableVolume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Usable Volume Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixUsableVolumeUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixUsableVolumeUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}

 

