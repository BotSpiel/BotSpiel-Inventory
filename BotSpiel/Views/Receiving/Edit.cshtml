
@model BotSpiel.DataAccess.Models.ReceivingPost 

@{
    ViewBag.Title = "Edit Receiving";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Receiving</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ixReceipt)

        <div class="form-group">
			@Html.ActionLink("Inventory Location ID", "Index", "InventoryLocations", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixInventoryLocation", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixInventoryLocation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Inbound Order ID", "Index", "InboundOrders", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixInboundOrder", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixInboundOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Handling Unit ID", "Index", "HandlingUnits", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHandlingUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHandlingUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Material ID", "Index", "Materials", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixMaterial", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Material Handling Unit Configuration ID", "Index", "MaterialHandlingUnitConfigurations", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixMaterialHandlingUnitConfiguration", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixMaterialHandlingUnitConfiguration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Handling Unit Type ID", "Index", "HandlingUnitTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHandlingUnitType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHandlingUnitType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nHandlingUnitQuantity, "Handling Unit Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nHandlingUnitQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nHandlingUnitQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sBatchNumber, "Batch Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sBatchNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sBatchNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sSerialNumber, "Serial Number", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sSerialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sSerialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nBaseUnitQuantityReceived, "Base Unit Quantity Received", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nBaseUnitQuantityReceived, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nBaseUnitQuantityReceived, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Status ID", "Index", "Statuses", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixStatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}


 

