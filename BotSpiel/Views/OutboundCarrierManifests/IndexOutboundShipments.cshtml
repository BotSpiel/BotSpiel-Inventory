@using System.Linq;
@using System.Collections.Generic;
@using BotSpiel.Services;
@inject IOutboundShipmentsService _outboundshipmentsService

@model IEnumerable<BotSpiel.DataAccess.Models.OutboundShipments>

@{
    ViewBag.Title = "Index Outbound Shipments";
}
<br>
<h4>Outbound Shipments</h4>

@{
    List<SelectListItem> queryAddresses = new List<SelectListItem>();
    queryAddresses.AddRange(_outboundshipmentsService.selectAddresses().ToList().OrderBy(de => de.sAddress).Select(de => new SelectListItem() { Text = de.sAddress, Value = de.sAddress.ToString() }));
    List<SelectListItem> queryCarriers = new List<SelectListItem>();
    queryCarriers.AddRange(_outboundshipmentsService.selectCarriers().ToList().OrderBy(de => de.sCarrier).Select(de => new SelectListItem() { Text = de.sCarrier, Value = de.sCarrier.ToString() }));
    List<SelectListItem> queryCompanies = new List<SelectListItem>();
    queryCompanies.AddRange(_outboundshipmentsService.selectCompanies().ToList().OrderBy(de => de.sCompany).Select(de => new SelectListItem() { Text = de.sCompany, Value = de.sCompany.ToString() }));
    List<SelectListItem> queryFacilities = new List<SelectListItem>();
    queryFacilities.AddRange(_outboundshipmentsService.selectFacilities().ToList().OrderBy(de => de.sFacility).Select(de => new SelectListItem() { Text = de.sFacility, Value = de.sFacility.ToString() }));
    List<SelectListItem> queryOutboundCarrierManifests = new List<SelectListItem>();
    queryOutboundCarrierManifests.AddRange(_outboundshipmentsService.selectOutboundCarrierManifests().ToList().OrderBy(de => de.sOutboundCarrierManifest).Select(de => new SelectListItem() { Text = de.sOutboundCarrierManifest, Value = de.sOutboundCarrierManifest.ToString() }));
    List<SelectListItem> queryStatuses = new List<SelectListItem>();
    queryStatuses.AddRange(_outboundshipmentsService.selectStatuses().ToList().OrderBy(de => de.sStatus).Select(de => new SelectListItem() { Text = de.sStatus, Value = de.sStatus.ToString() }));

}


@(Html
        .Grid(Model.Where(x => x.ixOutboundShipment > 0))
        .Build(columns =>
        {
                columns.Add(model => Html.CheckBox("Check_" + model.ixOutboundShipment, new { @class = "rowCheckBox" })).Titled(Html.CheckBox("CheckAll", new { @onclick = "toggleAll()" }));
                columns.Add(model => model.ixOutboundShipment).Titled("Details").Encoded(false).RenderedAs(item => Html.ActionLink("Details", "Details", "OutboundShipments", new { id = item.ixOutboundShipment }, new { @class = "modal-link" }));
                columns.Add(model => model.ixOutboundShipmentEdit).Titled("Edit").Encoded(false).RenderedAs(item => Html.ActionLink("Edit", "Edit", "OutboundShipments", new { id = item.ixOutboundShipment }, new { @class = "modal-link" }));
                columns.Add(model => model.sOutboundShipment).Titled("Outbound Shipment").Sortable(true).Filterable(true);
                columns.Add(model => model.Facilities.sFacility).Titled("Facility").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryFacilities);
                columns.Add(model => model.Companies.sCompany).Titled("Company").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryCompanies);
                columns.Add(model => model.Carriers.sCarrier).Titled("Carrier").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryCarriers);
                columns.Add(model => model.sCarrierConsignmentNumber).Titled("Carrier Consignment Number").Sortable(true).Filterable(true);
                columns.Add(model => model.Statuses.sStatus).Titled("Status").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryStatuses);
                columns.Add(model => model.Addresses.sAddress).Titled("Address").Sortable(true).Filterable(true).MultiFilterable(true).WithFilterOptions(queryAddresses);
                columns.Add(model => model.dtCreatedAt).Titled("Created At").Sortable(true).Filterable(true);
                columns.Add(model => model.dtChangedAt).Titled("Changed At").Sortable(true).Filterable(true);
                columns.Add(model => model.sCreatedBy).Titled("Created By").Sortable(true).Filterable(true);
                columns.Add(model => model.sChangedBy).Titled("Changed By").Sortable(true).Filterable(true);
        })
        .Empty("No data found")
        .Id("outboundshipments-ajax-grid")
        .Pageable(pager =>
        {
            pager.PageSizes = new Dictionary<Int32, String> { { 0, "All" }, { 5, "5" }, { 10, "10" }, { 15, "15" }, { 20, "20" }, { 40, "40" }, { 100, "100" } };
            pager.ShowPageSizes = true;
            pager.RowsPerPage = 20;
        })
        .Css("css-classes")
        .AppendCss("table-hover")
)

