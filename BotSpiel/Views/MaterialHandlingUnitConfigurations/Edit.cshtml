
@model BotSpiel.DataAccess.Models.MaterialHandlingUnitConfigurationsPost 

@{
    ViewBag.Title = "Edit Material Handling Unit Configurations";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Material Handling Unit Configurations</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ixMaterialHandlingUnitConfiguration)

        <div class="form-group">
			@Html.ActionLink("Material ID", "Index", "Materials", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixMaterial", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixMaterial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nNestingLevel, "Nesting Level", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nNestingLevel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nNestingLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Handling Unit Type ID", "Index", "HandlingUnitTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHandlingUnitType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHandlingUnitType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nQuantity, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nLength, "Length", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nLength, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nLength, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Length Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixLengthUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixLengthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nWidth, "Width", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nWidth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nWidth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Width Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixWidthUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixWidthUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nHeight, "Height", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nHeight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nHeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
			@Html.ActionLink("Height Unit ID", "Index", "UnitsOfMeasurement", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixHeightUnit", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixHeightUnit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}


 

