@*//Custom Code Start | Added Code Block*@
@using System.Linq;
@using System.Collections.Generic;
@using BotSpiel.Services;
@using BotSpiel.DataAccess.Models;
@inject ICarrierServicesService _carrierservicesService
@*//Custom Code End*@
@model BotSpiel.DataAccess.Models.CarriersPost

@{
    ViewBag.Title = "Edit Carriers";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Carriers</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ixCarrier)

        <div class="form-group">
            @Html.LabelFor(model => model.sCarrier, "Carrier", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sCarrier, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sCarrier, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.ActionLink("Carrier Type ID", "Index", "CarrierTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixCarrierType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixCarrierType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sStandardCarrierAlphaCode, "Standard Carrier Alpha Code", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sStandardCarrierAlphaCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sStandardCarrierAlphaCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.sCarrierConsignmentNumberPrefix, "Carrier Consignment Number Prefix", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.sCarrierConsignmentNumberPrefix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.sCarrierConsignmentNumberPrefix, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nCarrierConsignmentNumberStart, "Carrier Consignment Number Start", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nCarrierConsignmentNumberStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nCarrierConsignmentNumberStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nCarrierConsignmentNumberLastUsed, "Carrier Consignment Number Last Used", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nCarrierConsignmentNumberLastUsed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nCarrierConsignmentNumberLastUsed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dtScheduledPickupTime, "Scheduled Pickup Time", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dtScheduledPickupTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dtScheduledPickupTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@*//Custom Code Start | Added Code Block*@
<div>
    @{
        List<BotSpiel.DataAccess.Models.CarrierServices> carrierservices = new List<CarrierServices>();
        //Add empty record
        CarrierServices carrierService = new CarrierServices();
        carrierService.ixCarrier = Model.ixCarrier;
        carrierService.Carriers.ixCarrier = Model.ixCarrier;
        carrierservices.Add(carrierService);
        _carrierservicesService.IndexDb().Where(x => x.ixCarrier == Model.ixCarrier).ToList().ForEach(x =>
            {
                carrierservices.Add(x);
            }
            );
    }
    @await Html.PartialAsync("IndexCarrierServices", carrierservices)
</div>
@*//Custom Code End*@

<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}




