@*//Custom Code Start | Added Code Block*@
@using System.Linq;
@using System.Collections.Generic;
@using BotSpiel.Services;
@using BotSpiel.DataAccess.Models;
@inject IInboundOrderLinesService _inboundorderlinesService
@*//Custom Code End*@
@model BotSpiel.DataAccess.Models.InboundOrdersPost

@{
    ViewBag.Title = "Edit Inbound Orders";
}
<br>
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Inbound Orders</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ixInboundOrder)

    <div class="form-group">
        @Html.LabelFor(model => model.sOrderReference, "Order Reference", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.sOrderReference, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.sOrderReference, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.ActionLink("Inbound Order Type ID", "Index", "InboundOrderTypes", "", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ixInboundOrderType", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ixInboundOrderType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.ActionLink("Facility ID", "Index", "Facilities", "", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ixFacility", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ixFacility, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.ActionLink("Company ID", "Index", "Companies", "", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ixCompany", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ixCompany, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.ActionLink("Business Partner ID", "Index", "BusinessPartners", "", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ixBusinessPartner", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ixBusinessPartner, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dtExpectedAt, "Expected At", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dtExpectedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dtExpectedAt, "", new { @class = "text-danger" })
        </div>
    </div>
    @*//Custom Code Start | Removed Code Block*@
    @*<div class="form-group">
            @Html.ActionLink("Status ID", "Index", "Statuses", "", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ixStatus", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ixStatus, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*//Custom Code End*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Edit" class="btn btn-default" />
        </div>
    </div>
</div>
}

@*//Custom Code Start | Added Code Block*@
<div>
    @{
        List<BotSpiel.DataAccess.Models.InboundOrderLines> orderLines = new List<InboundOrderLines>();
        //Add empty record
        InboundOrderLines inboundOrderLines = new InboundOrderLines();
        inboundOrderLines.ixInboundOrder = Model.ixInboundOrder;
        inboundOrderLines.InboundOrders.ixInboundOrder = Model.ixInboundOrder;
        orderLines.Add(inboundOrderLines);
        _inboundorderlinesService.IndexDb().Where(x => x.ixInboundOrder == Model.ixInboundOrder).ToList().ForEach(x =>
            {
                orderLines.Add(x);
            }
            );
    }
    @await Html.PartialAsync("IndexInboundOrderLines", orderLines)
</div>
@*//Custom Code End*@

<div>
    @Html.ActionLink("Grid", "Index")
</div>

@section Scripts {
}




